buildscript {
    ext {
        springBootVersion = '2.1.7.RELEASE'
    }
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}


/ 플러그인 의존성들을 적용할 것인지 결정하는 코드 /
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group 'org.example'
version '1.0.4-SNAPSHOT'+new Date().format("yyyyMMddHHmmss")
sourceCompatibility = 1.8


repositories { // 각종 의존성(라이브러리)들을 어떤 원격 저장소에서 받을지 정함
    mavenCentral()
    jcenter()
}

dependencies { //프로젝트 개발에 필요한 의존성 선언

    //(3)
    implementation('org.springframework.boot:spring-boot-starter-web')
    implementation('org.springframework.boot:spring-boot-starter-mustache') //머스테치
    testImplementation('org.springframework.boot:spring-boot-starter-test')


// lombok
    implementation('org.projectlombok:lombok')
    implementation 'junit:junit:4.13.1'
    implementation 'org.junit.jupiter:junit-jupiter:5.8.1'
    annotationProcessor('org.projectlombok:lombok')
    testImplementation('org.projectlombok:lombok')
    testAnnotationProcessor('org.projectlombok:lombok')

    implementation('org.springframework.boot:spring-boot-starter-data-jpa') //jpa
    implementation("org.mariadb.jdbc:mariadb-java-client")
    implementation('com.h2database:h2') //h2

    implementation('org.springframework.boot:spring-boot-starter-oauth2-client') // 소셜 로그인 등 클라이언트 입장에서 소셜 기능 구현 시 필요한 의존성
    implementation('org.springframework.session:spring-session-jdbc') // spring-session-jdbc

    testImplementation('org.springframework.boot:spring-boot-starter-test')
    testImplementation("org.springframework.security:spring-security-test") // 권한 관련
}

// for Junit 5
test {
    useJUnitPlatform()
}